steps:
- name: 'gcr.io/cloud-builders/bazel'
  args: ['test', '--test_output=errors', '--spawn_strategy=standalone', '//pkg/...']

# Build image and tag to this project's repo.
- name: 'gcr.io/cloud-builders/bazel'
  args: ['run', '--spawn_strategy=standalone', '--define', 'project=$PROJECT_ID', '//:push']

# Run a simple example that builds two base images and an image based on one,
# then rebases it on the other.
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - -c
  - |
    # Build old base, rebase-base.
    cat > Dockerfile.base << EOF
    FROM ubuntu
    RUN echo foo > /base.txt
    EOF
    docker build -t gcr.io/$PROJECT_ID/rebase-base -f Dockerfile.base .

    # Build image FROM base, base-test
    cat > Dockerfile << EOF
    FROM gcr.io/$PROJECT_ID/rebase-base
    ENTRYPOINT ["cat", "/base.txt"]
    EOF
    docker build -t gcr.io/$PROJECT_ID/rebase-test .

    # Build new base, rebase-newbase.
    cat > Dockerfile.newbase << EOF
    FROM ubuntu
    RUN echo bar > /base.txt
    EOF
    docker build -t gcr.io/$PROJECT_ID/rebase-newbase -f Dockerfile.newbase .

    # Check that image FROM base does what base would have it do.
    docker run gcr.io/$PROJECT_ID/rebase-test | grep foo

    # Push all images. Rebasing is performed on images already in the registry.
    docker push gcr.io/$PROJECT_ID/rebase-base
    docker push gcr.io/$PROJECT_ID/rebase-test
    docker push gcr.io/$PROJECT_ID/rebase-newbase
# Perform rebase in the registry, producing image tagged :rebased.
- name: 'gcr.io/$PROJECT_ID/image-rebase'
  args:
  - --original=gcr.io/$PROJECT_ID/rebase-test
  - --old_base=gcr.io/$PROJECT_ID/rebase-base
  - --new_base=gcr.io/$PROJECT_ID/rebase-newbase
  - --rebased=gcr.io/$PROJECT_ID/rebase-test:rebased
# Check that rebased image does what *newbase* would have it do.
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - -c
  - docker run gcr.io/$PROJECT_ID/rebase-test:rebased | grep bar

# Check that oldbase can have ubuntu rebased out from under it.
# This tests cross-regsitry layer mirroring.
- name: gcr.io/$PROJECT_ID/image-rebase
  args:
  - --original=gcr.io/$PROJECT_ID/rebase-base
  - --old_base=ubuntu
  - --new_base=launcher.gcr.io/google/ubuntu16_04
  - --rebased=gcr.io/$PROJECT_ID/rebase-base:newubuntu

# Push the image-rebase image, to capture provenance information.
images: ['gcr.io/$PROJECT_ID/image-rebase']
